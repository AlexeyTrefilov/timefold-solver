{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "comment": "We check only getters and setters of the config classes excluding those inherited from timefold-solver-core.",
          "exclude": [
            "method .* ai\\.timefold\\.solver\\.benchmark\\.config.*::(?!(set|get)).*",
            "parameter .* ai\\.timefold\\.solver\\.benchmark\\.config.*::(?!(set|get)).*",
            "method .* ai\\.timefold\\.solver\\.core\\.config.*",
            "parameter .* ai\\.timefold\\.solver\\.core\\.config.*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "ai\\.timefold\\.solver\\.benchmark\\.api.*",
              "ai\\.timefold\\.solver\\.benchmark\\.config.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 8.29.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "ignore": true,
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method java.lang.Class<ai.timefold.solver.persistence.common.api.domain.solution.SolutionFileIO<?>> ai.timefold.solver.benchmark.config.ProblemBenchmarksConfig::getSolutionFileIOClass()",
          "new": "method java.lang.Class<? extends ai.timefold.solver.persistence.common.api.domain.solution.SolutionFileIO<?>> ai.timefold.solver.benchmark.config.ProblemBenchmarksConfig::getSolutionFileIOClass()",
          "justification": "Fix the type parameter."
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeParameterChanged",
          "old": "parameter void ai.timefold.solver.benchmark.config.ProblemBenchmarksConfig::setSolutionFileIOClass(===java.lang.Class<ai.timefold.solver.persistence.common.api.domain.solution.SolutionFileIO<?>>===)",
          "new": "parameter void ai.timefold.solver.benchmark.config.ProblemBenchmarksConfig::setSolutionFileIOClass(===java.lang.Class<? extends ai.timefold.solver.persistence.common.api.domain.solution.SolutionFileIO<?>>===)",
          "parameterIndex": "0",
          "justification": "Fix the type parameter."
        }
      ]
    }
  }
}
